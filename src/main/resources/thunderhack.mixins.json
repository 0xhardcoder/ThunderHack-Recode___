{
  "required": true,
  "minVersion": "0.8",
  "package": "thunder.hack.injection",
  "compatibilityLevel": "JAVA_17",
  "client": [
    "MixinArmorFeatureRenderer",
    "MixinBackgroundRenderer",
    "MixinBossBarHud",
    "MixinCamera",
    "MixinCapeFeatureRenderer",
    "MixinChatInputSuggestor",
    "MixinClientConnection",
    "MixinClientPlayerEntity",
    "MixinClientPlayerInteractionManager",
    "MixinClientPlayNetworkHandler",
    "MixinClientWorld",
    "MixinEntityRenderer",
    "MixinGameRenderer",
    "MixinHandledScreen",
    "MixinHeldItemRenderer",
    "MixinInGameHud",
    "MixinInGameOverlayRenderer",
    "MixinKeyboard",
    "MixinLightmapTextureManager",
    "MixinLivingEntityRenderer",
    "MixinMinecraftClient",
    "MixinMouse",
    "MixinOtherClientPlayerEntity",
    "MixinParticleManager",
    "MixinPlayerListEntry",
    "MixinPlayerListHud",
    "MixinRenderTickCounter",
    "MixinScreen",
    "MixinShaderEffect",
    "MixinShaderProgram",
    "MixinTextVisitFactory",
    "MixinWorldRenderer",
    "accesors.IClientPlayerEntity",
    "accesors.IClientWorldMixin",
    "accesors.IFrustum",
    "accesors.IInteractionManager",
    "accesors.IMinecraftClient",
    "accesors.IPostProcessShader",
    "accesors.IRenderPhaseMixin",
    "accesors.IWorldRenderer",
    "accesors.ShaderProgramAccessor"
  ],
  "injectors": {
    "defaultRequire": 1
  },
  "mixins": [
    "MixinAbstractBlock",
    "MixinAbstractBlockState",
    "MixinAbstractHorseEntity",
    "MixinBlock",
    "MixinBlockCollisionSpliterator",
    "MixinBlockItem",
    "MixinCobwebBlock",
    "MixinEntity",
    "MixinEntityLiving",
    "MixinFlowableFluid",
    "MixinItemEntity",
    "MixinPlayerEntity",
    "MixinScoreboardPlayerScore",
    "MixinShulkerBoxBlock",
    "MixinSodiumBlockOcclusionCache",
    "MixinSplashOverlay",
    "MixinWorld",
    "accesors.IBeaconBlockEntity",
    "accesors.IEntity",
    "accesors.IExplosionS2CPacket",
    "accesors.IGameMessageS2CPacket",
    "accesors.IHeldItemRenderer",
    "accesors.ILivingEntity",
    "accesors.IPlayerMoveC2SPacket",
    "accesors.IPlayerPositionLookS2CPacket",
    "accesors.ISPacketEntityVelocity",
    "accesors.ISPacketPlayerPosLook"
  ]
}
